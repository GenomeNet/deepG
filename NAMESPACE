# Generated by roxygen2: do not edit by hand

export("%>%")
export(auc_wrapper)
export(balanced_acc_wrapper)
export(compile_model)
export(conf_matrix_cb)
export(create_dummy_data)
export(create_model_genomenet)
export(create_model_lstm_cnn)
export(create_model_lstm_cnn_multi_input)
export(create_model_lstm_cnn_target_middle)
export(create_model_lstm_cnn_time_dist)
export(create_model_transformer)
export(create_model_twin_network)
export(create_model_wavenet)
export(dataset_from_gen)
export(early_stopping_time_cb)
export(evaluate_linear)
export(evaluate_model)
export(evaluate_sigmoid)
export(evaluate_softmax)
export(exp_decay)
export(f1_wrapper)
export(focal_loss_multiclass)
export(generator_dummy)
export(generator_fasta_label_folder)
export(generator_fasta_label_folder_wrapper)
export(generator_fasta_label_header_csv)
export(generator_fasta_lm)
export(generator_initialize)
export(generator_random)
export(generator_rds)
export(get_class_weight)
export(get_generator)
export(get_output_activations)
export(get_start_ind)
export(heatmaps_integrated_grad)
export(int_to_n_gram)
export(integrated_gradients)
export(layer_aggregate_multi_in_wrapper)
export(layer_aggregate_time_dist_wrapper)
export(layer_pos_embedding_wrapper)
export(layer_pos_sinusoid_wrapper)
export(layer_transformer_block_wrapper)
export(load_cp)
export(load_prediction)
export(loss_cl)
export(merge_models)
export(model_card_cb)
export(n_gram_dist)
export(n_gram_of_matrix)
export(noisy_loss_wrapper)
export(one_hot_to_seq)
export(plot_cm)
export(plot_roc)
export(predict_model)
export(predict_with_n_gram)
export(remove_add_layers)
export(remove_checkpoints)
export(reset_states_cb)
export(reshape_input)
export(reshape_tensor)
export(resume_training_from_model_card)
export(seq_encoding_label)
export(seq_encoding_lm)
export(sgdr)
export(split_fasta)
export(stepdecay)
export(summarize_states)
export(train_model)
export(train_model_cpc)
export(validation_after_training_cb)
import(data.table, except = c(first, last, between))
import(dplyr)
import(keras)
import(reticulate)
import(tensorflow)
importFrom(magrittr,"%>%")
