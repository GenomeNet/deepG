% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/inference.R
\name{writeStates}
\alias{writeStates}
\title{Write states to h5 or csv file}
\usage{
writeStates(
  model.path = NULL,
  layer.depth = NULL,
  layer_name = NULL,
  sequence = NULL,
  fasta.path = NULL,
  round_digits = 2,
  filename = "states.h5",
  step = 1,
  vocabulary = c("a", "c", "g", "t"),
  batch.size = 256,
  verbose = TRUE,
  returnStates = FALSE,
  padding = FALSE,
  file_type = "h5",
  model = NULL,
  mode = "lm",
  target_middle = FALSE,
  format = "fasta"
)
}
\arguments{
\item{model.path}{Path to a pretrained model.}

\item{layer.depth}{Depth of layer to evaluate. If NULL last layer is used. Can only be used for sequential model. 
Use \code{layer_name} for non-sequential model-}

\item{layer_name}{Name of layer to get output from.}

\item{sequence}{Character string, ignores fasta.path if argument given.}

\item{fasta.path}{Path to fasta file.}

\item{round_digits}{Number of decimal places.}

\item{filename}{Filename to store states in.}

\item{step}{Frequency of sampling steps.}

\item{vocabulary}{Vector of allowed characters, character outside vocabulary get encoded as 0-vector.}

\item{batch.size}{Number of samples to evaluate at once. Does not change output, only relevant for speed and memory.}

\item{verbose}{Whether to print model before and after removing layers.}

\item{returnStates}{Logical scalar, return states matrix.}

\item{padding}{Logical scalar, generate states for first maxlen nucleotides by
padding beginning of sequence with 0-vectors.}

\item{file_type}{Either "h5" or "csv".}

\item{model}{A keras model. If model and model.path are not NULL, model will be used for inference.}

\item{mode}{Either "lm" for language model or "label" for label classification.}

\item{target_middle}{Whether target to predict is in middle of sequence.}

\item{format}{Either "fasta" or "fastq".}
}
\description{
\code{writeStatesToH5} Removes layers (optional) from pretrained model and calculates states of fasta file, writes states to h5/csv file.
Function combines fasta entries in file to one sequence. This means predictor sequences can contain elements from more than one fasta entry. 
h5 file also contains sequence and positions of targets corresponding to states.
}
