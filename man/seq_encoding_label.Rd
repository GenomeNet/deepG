% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/preprocess.R
\name{seq_encoding_label}
\alias{seq_encoding_label}
\title{Encodes integer sequence for label classification.}
\usage{
seq_encoding_label(
  sequence = NULL,
  maxlen,
  vocabulary,
  start_ind,
  ambiguous_nuc = "zero",
  nuc_dist = NULL,
  use_quality = FALSE,
  quality_vector = NULL,
  use_coverage = FALSE,
  max_cov = NULL,
  adjust_start_ind = TRUE,
  discard_amb_nt = FALSE,
  cov_vector = NULL,
  n_gram = NULL,
  n_gram_stride = 1,
  char_sequence = NULL
)
}
\arguments{
\item{sequence}{Sequence of integers.}

\item{maxlen}{Length of predictor sequence.}

\item{vocabulary}{Set of characters to encode.}

\item{start_ind}{Start positions of samples in \code{sequence}.}

\item{ambiguous_nuc}{How to handle nucleotides outside vocabulary, either "zero", "discard" or "equal". If "zero", input gets encoded as zero vector;
if "equal" input is 1/length(vocabulary) x length(vocabulary). If "discard" samples containing nucleotides outside vocabulary get discarded.}

\item{nuc_dist}{Nucleotide distribution.}

\item{use_quality}{Use quality scores.}

\item{quality_vector}{Vector of quality probabilities.}
}
\description{
Helper function for \code{\link{generator_fasta_label_header_csv}}, returns encoding for integer sequence.
}
\examples{
# use integer sequence as input
x <- seq_encoding_label(sequence = c(1,0,5,1,3,4,3,1,4,1,2),
                        maxlen = 5,
                        vocabulary = c("a", "c", "g", "t"),
                        start_ind = c(1,3),
                        ambiguous_nuc = "equal")

x[1,,] # 1,0,5,1,3

x[2,,] # 5,1,3,4,

# use character string as input
x <- seq_encoding_label(maxlen = 5,
                        vocabulary = c("a", "c", "g", "t"),
                        start_ind = c(1,3),
                        ambiguous_nuc = "equal",
                        char_sequence = "ACTaaTNTNaZ")

x[1,,] # actaa

x[2,,] # taatn
}
