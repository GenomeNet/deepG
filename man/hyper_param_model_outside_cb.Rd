% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/callbacks.R
\name{hyper_param_model_outside_cb}
\alias{hyper_param_model_outside_cb}
\title{hyperparameter callback}
\usage{
hyper_param_model_outside_cb(
  tensorboard.log,
  run.name,
  wavenet_format,
  cnn_format,
  model,
  vocabulary,
  path,
  reverseComplements,
  labelVocabulary,
  maxlen,
  epochs,
  max.queue.size,
  lr.plateau.factor,
  batch.size,
  patience,
  cooldown,
  steps.per.epoch,
  step,
  randomFiles
)
}
\arguments{
\item{tensorboard.log}{Path to tensorboard log directory.}

\item{run.name}{Name of the run (without file ending). Name will be used to identify output from callbacks.}

\item{model}{A keras model.}

\item{vocabulary}{Vector of allowed characters. Character outside vocabulary get encoded as specified in \code{ambiguous_nuc}.}

\item{path}{Path to folder where individual or multiple FASTA or FASTQ files are located for validation. If \code{train_type} is \code{label_folder}, should be a vector
containing a path for each class. If \code{train_type} is not \code{label_folder}, can be a list of directories.}

\item{reverseComplements}{Logical, for every new file decide randomly to use original data or its reverse complement.}

\item{labelVocabulary}{Character vector of possible targets. Targets outside \code{labelVocabulary} will get discarded if
\code{train_type = "label_header"}.}

\item{epochs}{Number of iterations.}

\item{max.queue.size}{Queue on fit_generator().}

\item{lr.plateau.factor}{Factor of decreasing learning rate when plateau is reached.}

\item{batch.size}{Number of samples that are used for one network update.}

\item{patience}{Number of epochs waiting for decrease in loss before reducing learning rate.}

\item{cooldown}{Number of epochs without changing learning rate.}

\item{steps.per.epoch}{Number of batches per epoch.}

\item{step}{Frequency of sampling steps.}

\item{randomFiles}{Boolean, whether to go through files sequentially or shuffle beforehand.}
}
\description{
hyperparameter callback
}
